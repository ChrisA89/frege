// enable UTF-8: «««««••••••••••••••»»»»»»»¦¦¦¦¦¦¦¦¦¦¦¦
/**
 * Definitions for native components below javax.swing
 */

/*
 * $Author$
 * $Revision$
 * $Date$
 * $Id$
 */

package frege.j.Swing where

import frege.j.Lang()     JL
import frege.j.Awt(Container Component)      Awt

     

/// convenient name for type 'JFrameT'
type JFrame = JFrameT RealWorld    
/// A @javax.swing.JFrame@
data JFrameT s = native javax.swing.JFrame where
    /// creates a new invisible frame with the specified title
    native new :: String -> IO JFrame
    /// Sets the operation that will happen by default when the user initiates a "close" on this frame.
    native setDefaultCloseOperation :: JFrame -> Int -> IO ()
    /// constant to dispose of the window when closed
    pure native dispose_on_close javax.swing.JFrame.DISPOSE_ON_CLOSE :: Int
    /// constant to do nothing when closed
    pure native do_nothing_on_close javax.swing.JFrame.DO_NOTHING_ON_CLOSE :: Int
    /// constant to exit the application when closed
    pure native exit_on_close javax.swing.JFrame.EXIT_ON_CLOSE :: Int
    /// constant to hide the window when closed
    pure native hide_on_close javax.swing.JFrame.HIDE_ON_CLOSE :: Int
    
    native getContentPane :: JFrame -> IO Container
instance Awt.IsWindow JFrameT
    
/// convenient name for 'JLabelT'
type JLabel = JLabelT RealWorld
/// a swing label
data JLabelT s = native javax.swing.JLabel where
    /// create a label
    native new :: String -> IO JLabel

instance Awt.IsContainer JLabelT

/// wrapper for @javax.swing.SwingUtilities.invokeLater@
native invokeLater javax.swing.SwingUtilities.invokeLater :: JL.Runnable -> IO ()
/// wrapper for @javax.swing.SwingUtilities.invokeAndWait@
native invokeAndWait javax.swing.SwingUtilities.invokeAndWait :: JL.Runnable -> IO (Exception ())

// ------------------- JComponent ----------------------------------
/// operations of @javax.swing.JComponent@
interface IsJComponent Awt.IsContainer c => c where
    /// downcast to @javax.swing.JComponent@
    pure native asJComponent "(javax.swing.JComponent)" :: c s -> JComponentT s

/// a 'JComponentT' in the 'IO' monad
type JComponent = JComponentT RealWorld
/// an object with compiler time type @javax.swing.JComponent@
data JComponentT s = native javax.swing.JComponent
instance IsJComponent JComponentT
    
