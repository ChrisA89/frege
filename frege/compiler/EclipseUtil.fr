{--
    Provide functions for use in the fregIDE
-}

{-
 * $Author: Ingo.Wechsung@gmail.com $
 * $Revision:  $
 * $Date:  $
 * $Id:  $
-}

package frege.compiler.EclipseUtil where

import frege.compiler.Data
import frege.compiler.Utilities as U(isPSigma)
import frege.List (each, values)


--- This is $Revision: 431 $
public version = v "$Revision: 431 $" where
    v (m ~ #(\d+)#) | Just g <- m.group 1 = g.atoi
    v _ = 0

{--
    Create a list of triples with  position, namespace and package
    for every import except the automatic ones.
    -}
imports :: Global -> [(Position, String, String)]
imports g = [ (pos, NSName.unNS ns, Pack.un pack) | 
                (ns, pos) <- (sortBy (comparing snd) • each) g.sub.nsPos,
                pos != Position.null,
                pack <- maybe [] (:[]) (g.namespaces.lookup ns) ]

{--
    Create the list of symbols ordered by position
    -}
symbols :: Symtab -> [Symbol]
symbols tab = (sortBy positionAndName • filter wanted • values) tab
    where
        positionAndName a b = case Symbol.pos a <=> Symbol.pos b of
                                    Eq -> comparing (QName.base • Symbol.name) a b
                                    Lt -> true
                                    Gt -> false 
        wanted :: Symbol -> Bool 
        wanted sym 
            | sym.{alias?}                       = false
            | sym.vis == Private                 = false
            | sym.name.base ~ ´^(chg|upd|has)\$´ = false
            | otherwise                          = true


{--
    Make a label for a symbol
    -}
label g SymI{clas,typ} = clas.nice g ++ "  "   ++ typ.rho.nicer g
label g SymV{name,typ} = name.base   ++ " :: " ++ styp 
    where
        styp | isPSigma typ = "?"
             | otherwise    = typ.rho.nicer g
label g SymD{name,typ} = name.base   ++ " :: " ++ typ.rho.nicer g             
label g sym            = sym.name.base 
                    