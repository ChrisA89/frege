--- The non-recursive form of several types,as used in @GenMeta@
--- This corresponds closely to the interfaces in @frege.runtime.Meta@
module frege.compiler.types.External where 

import  frege.compiler.types.QNames

data TauA = TauA {!kind::Int, !tcon::Maybe QName, !suba::Int, !subb::Int, !tvar::String}


data RhoA = RhoA {!rhofun::Bool, !cont::[ContextA], !sigma::Int, !rhotau::Int}


data ContextA = CtxA {!clas::QName, !tau::Int}


data SigmaA = SigmaA {!bound::[String], !kinds::[Int], !rho::Int}


data KindA = KindA {!kind, !suba, !subb :: Int}


data ExprA = !ExprA {xkind::Int, name::Maybe QName, lkind::Int, varval::Maybe String,
                    alts :: [Int], subx1 :: Int, subx2 :: Int, subx3 :: Int}

derive Eq  ExprA


derive Ord ExprA


derive Eq  TauA


derive Ord TauA


derive Eq  ContextA


derive Ord ContextA


derive Eq  RhoA


derive Ord RhoA


derive Eq  SigmaA


derive Ord SigmaA


derive Eq KindA


derive Ord KindA


