{--
    Support for concurrency.
    
    Concurrency in Frege comes in 2 flavors. 
    The first is through 'Thread's, which are,
    unlike in Haskell, @OS@ threads.
  
    The second possibility is to use a thread pool and an executor service 
    one can submit tasks to. But note that blocking asynchronous tasks,
    unlike Haskell green threads, will block an OS thread on blocking actions.  
-}    

module frege.control.Concurrent where

--- Create and start a new OS 'Thread' that runs an 'IO' action.
--- In Frege, there is no difference between 'forkIO' and 'forkOS' 
forkIO :: IO () -> IO Thread
forkIO action = do
    r <- Runnable.new action
    t <- Thread.new r
    t.start
    return t

--- Haskell people use this when they want to start a OS 'Thread'
forkOS = forkIO