-- «•»¦«•»¦«•»¦«•»¦«•»¦«•»¦«•»¦«•»¦«•»¦«•»¦«•»¦«•»¦«•»¦«•»¦«•»¦«•»¦«•»¦«•»¦«•»¦«•»¦«•»¦«•»¦«•»¦«•»¦«•»¦«•»¦«•»¦
package errors.Error21 where  -- type errors

{-
H errors/Error21.fr:16: application of bar will diverge.
E errors/Error21.fr:15: Ambiguous type Enum a => Int -> Int in value `foo`
H errors/Error21.fr:15: It is not clear at what types to instantiate type
                variable a that occurs in the context, but not in the type.
H errors/Error21.fr:15: This can happen through constructs like (Enum.ord •
                Enum.from)  where a class context is both introduced and
                eliminated locally so that a caller can not know which type is
                meant.
 -}

foo = ord • from
bar a = bar a
