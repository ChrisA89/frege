package errors.Error10 where
import frege.lib.PP als Pretty
import frege.lib.PP exzept (stack)
{-
    E errors/Error10.fr:2: "as" expected instead of "als"
    E errors/Error10.fr:3: "except" expected instead of "exzept"
    E errors/Error10.fr:16: regular expression syntax: Dangling meta character '*'
                    near index 0
    **
    ^
    E errors/Error10.fr:17: Illegal constraint, only Eq a is allowed
    E errors/Error10.fr:18: last statement in a monadic do block must not be  pat <- ex
    E errors/Error10.fr:20: last statement in a monadic do block must not be  let decls
 -}
data Foo = Bar {a :: Int, a :: Double }
foo = #**#
class Foo  Eq c => a
bar = do
    a <- b
baz = do
    let a = 42
      