{--

    Compiler aborts with

    > frege.runtime.Undefined: bound Meta not allowed in substTau

    This is due to a wrong assumtion on my side, it used to work earlier.
    Should run once compiler is purified.
-}
module tests.comp.Issue55 where



data Rec a b = R { 
    name :: forall f. Functor f => f a -> f String, 
    age  :: b }

getName R{name} x = name x


main = do
     
    let rec = R (fmap Int.show) 42
        rec2 = rec.{name <- const (fmap (const "no"))}
        rec3 = rec.{name = fmap (const "yes")}
    println (rec.name  (Just 61))
    println (rec2.name (Just 62))
    println (rec3.name (Just 63))
    println (getName R{name = fmap  show, age = 42} ([7.45]))