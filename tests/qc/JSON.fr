--- Test properties of the 'Json' module
module tests.qc.JSON where

import frege.Prelude hiding(Object)

import Data.JSON as Json(Value, Object, runParser, parseValue, lexer, parseJSON)
import Test.QuickCheck as Q public

instance Arbitrary Value where
    arbitrary = frequency [
                        (5, return Value.Null),
                        (10, Value.Bool   <$> arbitrary),
                        (20, Value.String <$> arbitrary),
                        (10, Value.Number . Double.show <$> arbitrary),
                        (10, Value.Number . Integer.show <$> arbitrary),
                        (1, Value.Object  <$> arbitrary),
                    ]

instance Arbitrary Object where
    arbitrary = oneof [
                    Object.Array  <$> arbitrary,
                    Object.Struct <$> arbitrary  
                ]

--- parsing the 'String' representation of any 'Value' yields the same 'Value'
p_value = property $ \a -> runParser parseValue (lexer (Value.show a)) == Right a

--- parsing the 'String' representation of any 'Object' yields the same 'Object'
p_object =  property $ \a -> (parseJSON (Object.show a)) == Right a