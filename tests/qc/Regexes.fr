--- This is an undocumented module
module tests.qc.Regexes where

import Test.QuickCheck



replaceFst = once ("zzzdogzzzdogzzz".replaceFirst  ´dog´ "cat" == "zzzcatzzzdogzzz")
replaceAll = once ("zzzdogzzzdogzzz".replaceAll    ´dog´ "cat" == "zzzcatzzzcatzzz")
correct = once ("dogs fear cats".replaceFirst '(\w+) (\w+) (\w+)' "$3 $2 $1" == "cats fear dogs")

match   = once ("foobar" ~ '(.)\1')
tilde2  = once ("foobar" ~~ '(.)\1' == Just "oo")
tilde3  = once (map ("frege" ~~~ ´(..).(..)´) [0..3] 
                == [Just "frege", Just "fr", Just "ge" , Nothing])
tilde2star = once $
    "cats and dogs are not concatenated." ~~* ´cat|dog´ == ["cat", "dog", "cat"]

nomatch = once ("foobar" !~ '(.)\1\1')
prop_not = property (\s -> !(s ~ '(.)\1') == (s !~ '(.)\1'))