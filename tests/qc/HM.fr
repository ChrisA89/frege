--- Test 'HashMap' properties
module tests.qc.HM where

import Test.QuickCheck
import Data.HashMap H(HashMap)

instance Arbitrary (Eq k, Arbitrary k, Arbitrary v) => (HashMap k v) where
    arbitrary = arbitrary >>= return . fold (\hm \(k, v) -> H.insert k v hm) HashMap.empty 

--- invariants are met before and after insert
p_inv = property hminsert
    where
        hminsert :: HashMap String Int -> String -> Int -> Property
        hminsert hm s i = collect 
                ("map size <%3d00".format (1 + H.size hm `quot` 100) :: String) 
                (hm.invariants && (H.insert s i hm).invariants)