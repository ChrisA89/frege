module examples.Concurrent where

data Thread = mutable native java.lang.Thread where
    native new      :: MutableIO Runnable -> IO Thread
    native start    :: Thread -> IO ()
    
forkIO :: IO () -> IO Thread
forkIO action = do
    r <- Runnable.new action
    t <- Thread.new r
    t.start
    return t  
    
main args = do
    forkIO (replicateM_ 100000 (putChar 'a'))
    replicateM_ 100000 (putChar 'b')
      