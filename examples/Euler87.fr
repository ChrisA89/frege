{--
The smallest number expressible as the sum of a prime square, 
prime cube, and prime fourth power is 28. 
In fact, there are exactly four numbers below fifty that can be expressed 
in such a way:

28 = 2² + 2³ + 2⁴
33 = 3² + 2³ + 2⁴
49 = 5² + 2³ + 2⁴
47 = 2² + 3³ + 2⁴

How many numbers below fifty million can be expressed as the sum of a prime 
square, prime cube, and prime fourth power?
-}

module examples.Euler87 where

import examples.EulerLib
import frege.prelude.Floating


limit = 50_000_000

main _  = do
        println (length p4s, length p3s, length sums)
    where
        sums = [ p4 + p3 + p2 |
                    p4 <- p4s, p3 <- p3s,
                    p3 + p4 < limit,
                    let { root = isSquare (limit-p4-p3) },
                    p2 <- either (const []) (:[]) root ] 
        -- nums = 3..limit
        sqr :: Int -> Int
        sqr n = n*n
        sqr3 :: Int ->Int
        sqr3 n = n*n*n
        -- the list of prime fourth powers below the limit
        p4s = takeWhile (<limit) • map (sqr • sqr) $ primes
        p3s = takeWhile (<limit) • map sqr3 $ primes
        