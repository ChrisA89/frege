<?xml version="1.0" ?>

<!-- This was based around Sun javac 1.3.1. -->

<!DOCTYPE COMMANDO SYSTEM "commando.dtd">

<COMMANDO>
	<UI>
		<CAPTION LABEL="Source file(s)">

		<FILE_ENTRY LABEL="Source file(s)" VARNAME="source"
			EVAL="buffer.getPath()" />
		<DIR_ENTRY LABEL="Project directory" VARNAME="sourcedir" />
		</CAPTION>

		<CAPTION LABEL="Paths">

		<!-- <ENTRY LABEL="Boot class path" VARNAME="bootclasspath"/> -->
		<ENTRY LABEL="Class path" VARNAME="classpath_env" />
		<ENTRY LABEL="Source path" VARNAME="sourcepath"
			EVAL="getProjectRoot(view, buffer)" />
		<!-- <DIR_ENTRY LABEL="Extension directory" VARNAME="extdirs" /> -->
		<DIR_ENTRY LABEL="Output directory" VARNAME="outputpath" />

		</CAPTION>

		<CAPTION LABEL="Compilation flags">

		<TOGGLE LABEL="Show hints" VARNAME="hints"  DEFAULT="TRUE" />
		<TOGGLE LABEL="Optimize" VARNAME="optimize" />
		<TOGGLE LABEL="Show warnings" VARNAME="warn" DEFAULT="TRUE" />
		<!-- TOGGLE LABEL="Show deprecation" VARNAME="deprecation" DEFAULT="TRUE" /> -->
		<TOGGLE LABEL="Verbose compile messages" VARNAME="verbose" DEFAULT="TRUE" />
		<ENTRY LABEL="Source file encoding" VARNAME="encoding" DEFAULT="UTF-8"
			EVAL="buffer.getProperty(Buffer.ENCODING)" />
	    <ENTRY LABEL="Additional flags" VARNAME="additional" />

		</CAPTION>
	</UI>

	<COMMANDS>
	    <COMMAND SHELL="System" CONFIRM="FALSE">
	        buf = new StringBuffer("cd ");
	        buf.append('"');
	        buf.append(sourcedir);
	        buf.append('"');
	        buf.toString();
	    </COMMAND>
		<COMMAND SHELL="System" CONFIRM="FALSE">
			buf = new StringBuffer();
			buf.append("java -Xmx176m -Xss8m -cp build frege.compiler.Main ");
			
			/* jEdit.setProperty("CLASSPATH", classpath_env);
			setenv("CLASSPATH", classpath_env);
			classpath = getBufferClassPath(buffer);
			*/

			/* if(!bootclasspath.equals(""))
			{
				buf.append(" -bootclasspath \"");
				buf.append(bootclasspath);
				buf.append('"');
			} */

			if(!classpath_env.equals(""))
			{
				buf.append(" -fp \"");
				buf.append(classpath_env);
				buf.append('"');
			}

			/*
			if(!sourcepath.equals(""))
			{
				buf.append(" -sourcepath \"");
				buf.append(sourcepath);
				buf.append('"');
			}

			if(!extdirs.equals(""))
			{
				buf.append(" -extdirs \"");
				buf.append(extdirs);
				buf.append('"');
			}
			*/

			if(!outputpath.equals(""))
			{
				buf.append(" -d \"");
				buf.append(outputpath);
				buf.append('"');
			}

			
			if(hints)
				buf.append(" -hints");
				
			if(optimize)
				buf.append(" -O");

			if(!warn)
				buf.append(" -nowarn");

			/*
				if(deprecation)
				buf.append(" -deprecation");
            */				

			if(verbose)
				buf.append(" -v"); 

			if(!encoding.equals(""))
			{
				buf.append(" -encoding ");
				buf.append(encoding);
			}
			
			if (!additional.equals("")) {
			    buf.append(" ");
			    buf.append(additional);
			}

			buf.append(" \"");
			buf.append(source);
			buf.append('"');

			// return value
			buf.toString();
		</COMMAND>
	</COMMANDS>
</COMMANDO>
