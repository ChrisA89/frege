--- develop and test new things.
module Scrap where
import frege.IO

{-Reads a line from standard input device
main _ = do
  isin  <- stdin
  isrin <- IO.InputStreamReader.new isin
  brin <- IO.BufferedReader.fromISR isrin
  -- line <- brin.readLine
  -- println line
  mapM_ println (bitpattern 8 2)
  -}

{-
foo f a c = f (case if let b = not a in b&&b 
                    then let double a = a+a-c+c in double 21 
                    else 43 of {
                42 -> true; 
                _ -> false})

bar a b = (if a then (1+) else (1-)) (if b then 42 else 43)  

baz = \f -> \a -> f (
        (\_ -> case a of {42 -> true; _ -> false}) 0
    )
    -}
dbl x b = let c = b in (\x -> if b then x + x else x + x) x + 42                  