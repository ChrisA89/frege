--- develop and test new things.
package Scrap 
    inline, candidates (Applicative.return, Maybe.fmap) where

-- class A (B a) => a
-- class B (C a) => a
-- class C (A a) => a 



instance Monad Maybe where
    return a = Just a
    Nothing >>= _ = Nothing
    Just a  >>= k = k a

instance MonadFail Maybe where    
    fail  = const Nothing

instance Functor Maybe where
    fmap f Nothing  = Nothing
    fmap f (Just x) = Nothing


    
main args = do
    let x = Just 42
        y = fmap (+1) x
    println y
    case y of
        Just _  -> println "This is wrong!"
        _       -> println "This is correct!"            



